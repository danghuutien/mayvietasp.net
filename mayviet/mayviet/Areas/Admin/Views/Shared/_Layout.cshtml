<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link href="~/Areas/Admin/public/images/logo.png" rel="icon">
    <link href="~/Areas/Admin/public/images/logo.png" rel="apple-touch-icon">
    <link href="~/Areas/Admin/public/css/app.css" rel="stylesheet" />
    <script src="~/Areas/Admin/public/js/app.js"></script>
    <script src='https://unpkg.com/vuejs-form@latest/build/vuejs-form.min.js'></script>
    <link href="~/Areas/Admin/public/css/style.css" rel="stylesheet" />
    @*<link href="https://unpkg.com/tailwindcss@^2/dist/tailwind.min.css" rel="stylesheet">*@
    <link rel="stylesheet" href="https://unpkg.com/css-pro-layout@1.1.0/dist/css/css-pro-layout.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/remixicon@2.2.0/fonts/remixicon.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.2.1/css/all.min.css" />
    <title>dang huu tien</title>
    <style>
        [v-cloak] {
            display: none;
        }
    </style>
    <style>
        /* This example part of kwd-dashboard see https://kamona-wd.github.io/kwd-dashboard/ */
        /* So here we will write some classes to simulate dark mode and some of tailwind css config in our project */
        :root {
            --light: #edf2f9;
            --dark: #152e4d;
            --darker: #12263f;
        }

        .dark .dark\:text-light {
            color: var(--light);
            /* background-color: var(--light); */
        }

        .dark .dark\:bg-dark {
            background-color: var(--dark);
        }

        .dark .dark\:bg-darker {
            background-color: var(--darker);
        }

        .dark .dark\:text-gray-300 {
            color: #d1d5db;
        }

        .dark .dark\:text-indigo-500 {
            color: #6366f1;
        }

        .dark .dark\:text-indigo-100 {
            color: #e0e7ff;
        }

        .dark .dark\:hover\:text-light:hover {
            color: var(--light);
        }

        .dark .dark\:border-indigo-800 {
            border-color: #3730a3;
        }

        .dark .dark\:border-indigo-700 {
            border-color: #4338ca;
        }

        .dark .dark\:bg-indigo-600 {
            background-color: #4f46e5;
        }

        .dark .dark\:hover\:bg-indigo-600:hover {
            background-color: #4f46e5;
        }

        .dark .dark\:border-indigo-500 {
            border-color: #6366f1;
        }

        .hover\:overflow-y-auto:hover {
            overflow-y: auto;
        }

        .layout.fixed-header.fixed-sidebar .header {
            background-color: white;
        }

        .layout {
            z-index: 10 !important;
        }
    </style>

</head>

<body>
    <div id="trangchu" class="layout has-sidebar fixed-sidebar fixed-header">
        <aside id="sidebar" class="sidebar break-point-lg has-bg-image">
            <div class="image-wrapper">
                <img src="https://user-images.githubusercontent.com/25878302/144499035-2911184c-76d3-4611-86e7-bc4e8ff84ff5.jpg"
                     alt="sidebar background" />
            </div>
            <div class="sidebar-layout">
                <div class="sidebar-header">
                    <span style="
                       text-align:center;
                      text-transform: uppercase;
                      font-size: 15px;
                      letter-spacing: 3px;
                      font-weight: bold;
                    ">Vinh University</span>
                </div>
                <div class="sidebar-content">
                    <!-- tesst -->
                    <nav class="menu open-current-submenu">
                        <style>
                            #sidebar::-webkit-scrollbar {
                                display: none;
                            }
                        </style>
                        <ul id="menu-bar" style="font-size:0.9rem; font-family:'ui-sans-serif,system-ui,-apple-system,BlinkMacSystemFont,' 'Segoe UI',Roboto,'Helvetica Neue',Arial,'Noto Sans',sans-serif,'Apple Color Emoji','Segoe UI Emoji','Segoe UI Symbol','Noto Color Emoji';">
                            <li class="menu-item">
                                <a href="/">
                                    <span class="menu-icon">
                                        <i class="ri-home-line"></i>
                                    </span>
                                    <span class="menu-title"> Trang chủ</span>
                                </a>
                            </li>
                            <li class="menu-item">
                                <a href="~/Admin/TypeCategory/Index">
                                    <span class="menu-icon">
                                        <i class="fa-solid fa-user-pen"></i>
                                        @*<i class="el-icon-edit"></i>*@
                                        @*<i class="far-edit"></i>*@
                                    </span>
                                    <span class="menu-title">Loại bài viết</span>
                                </a>
                            </li>

                            <li class="menu-item">
                                <a href="/Admin/Menu/Index">
                                    <span class="menu-icon">
                                        <i class="fa-solid fa-user-pen"></i>
                                        @*<i class="el-icon-edit"></i>*@
                                        @*<i class="far-edit"></i>*@
                                    </span>
                                    <span class="menu-title"> Danh mục</span>
                                </a>
                            </li>

                            <li class="menu-item">
                                <a href="~/Admin/Post/Index">
                                    <span class="menu-icon">
                                        <i class="fa-solid fa-user-pen"></i>
                                        @*<i class="el-icon-edit"></i>*@
                                        @*<i class="far-edit"></i>*@
                                    </span>
                                    <span class="menu-title">Bài viết</span>
                                </a>
                            </li>

                            <li class="menu-item">
                                <a href="~/Admin/User/Index">
                                    <span class="menu-icon">
                                        <i class="fa-solid fa-user-pen"></i>
                                        @*<i class="el-icon-edit"></i>*@
                                        @*<i class="far-edit"></i>*@
                                    </span>
                                    <span class="menu-title">User</span>
                                </a>
                            </li>

                            <li class="menu-item">
                                <a href="~//Admin/Comment/Index">
                                    <span class="menu-icon">
                                        <i class="fa-solid fa-user-pen"></i>
                                        @*<i class="el-icon-edit"></i>*@
                                        @*<i class="far-edit"></i>*@
                                    </span>
                                    <span class="menu-title">Comments</span>
                                </a>
                            </li>

                            <li class="menu-item">
                                <a href="~/Admin/Question/Index">
                                    <span class="menu-icon">
                                        <i class="fa-solid fa-user-pen"></i>
                                        @*<i class="el-icon-edit"></i>*@
                                        @*<i class="far-edit"></i>*@
                                    </span>
                                    <span class="menu-title">Câu hỏi</span>
                                </a>
                            </li>

                            <li class="menu-item">
                                <a href="~/Admin/Contact/Index">
                                    <span class="menu-icon">
                                        <i class="fa-solid fa-user-pen"></i>
                                        @*<i class="el-icon-edit"></i>*@
                                        @*<i class="far-edit"></i>*@
                                    </span>
                                    <span class="menu-title">Liên hệ</span>
                                </a>
                            </li>

                            <li class="menu-item">
                                <a href="/">
                                    <span class="menu-icon">
                                        <i class="fa-solid fa-user-pen"></i>
                                        @*<i class="el-icon-edit"></i>*@
                                        @*<i class="far-edit"></i>*@
                                    </span>
                                    <span class="menu-title">Hình ảnh</span>
                                </a>
                            </li>
                            <li class="menu-item sub-menu">
                                <a>
                                    <span class="menu-icon">
                                        <i class="ri-login-box-line"></i>
                                    </span>

                                    <span class="menu-title"> Tài Khoản</span>

                                </a>

                                <div class="sub-menu-list" data-popper-escaped="" data-popper-placement="left" style="position: fixed; left: 0px; top: 0px; margin: 0px; visibility: hidden; transform: translate3d(0px, 445.333px, 0px);" data-popper-reference-hidden="">

                                    <ul>

                                        <li class="menu-item">
                                            <a href="~/Admin/Login/Logout">

                                                <span class="menu-title"> Logout</span>

                                            </a>
                                        </li>
                                    </ul>

                                </div>

                            </li>


                        </ul>
                    </nav>
                </div>
                <!-- <div class="relative flex items-center justify-center flex-shrink-0">


                </div>
                <div class="sidebar-footer"><span>Sidebar footer</span></div> -->
            </div>
        </aside>
        <div id="overlay" class="overlay"></div>
        <div class="layout">
            <header class="header">
                <a id="btn-collapse" class="cursor-pointer">
                    <i class="ri-menu-line ri-xl"></i>
                </a>
                <a id="btn-toggle" class="sidebar-toggler break-point-lg">
                    <i class="ri-menu-line ri-xl"></i>
                </a>
            </header>
            <main class="content flex bg-gray-100">

                @RenderBody()
            </main>
            <footer class="text-center text-white" style="background-color: #0a4275;">
                <div class="text-center p-4" style="background-color: rgba(0, 0, 0, 0.2);">

                    <a class="text-white" href="https://www.facebook.com/profile.php?id=100048563614036">
                        © Copyright Đặng Hữu Tiến. 2022

                    </a>
                </div>
            </footer>
        </div>

    </div>


    <style>
        .el-menu-vertical-demo:not(.el-menu--collapse) {
            width: 200px;
            min-height: 400px;
        }
    </style>
    <script src="~/Areas/Admin/public/js/main.js"></script>
    <script>
        const ANIMATION_DURATION = 300;

        const SIDEBAR_EL = document.getElementById("sidebar");

        const SUB_MENU_ELS = document.querySelectorAll(
            ".menu > ul > .menu-item.sub-menu"
        );

        const FIRST_SUB_MENUS_BTN = document.querySelectorAll(
            ".menu > ul > .menu-item.sub-menu > a"
        );

        const INNER_SUB_MENUS_BTN = document.querySelectorAll(
            ".menu > ul > .menu-item.sub-menu .menu-item.sub-menu > a"
        );

        class PopperObject {
            instance = null;
            reference = null;
            popperTarget = null;

            constructor(reference, popperTarget) {
                this.init(reference, popperTarget);
            }

            init(reference, popperTarget) {
                this.reference = reference;
                this.popperTarget = popperTarget;
                this.instance = Popper.createPopper(this.reference, this.popperTarget, {
                    placement: "right",
                    strategy: "fixed",
                    resize: true,
                    modifiers: [{
                        name: "computeStyles",
                        options: {
                            adaptive: false
                        }
                    },
                    {
                        name: "flip",
                        options: {
                            fallbackPlacements: ["left", "right"]
                        }
                    }
                    ]
                });

                document.addEventListener(
                    "click",
                    (e) => this.clicker(e, this.popperTarget, this.reference),
                    false
                );

                const ro = new ResizeObserver(() => {
                    this.instance.update();
                });

                ro.observe(this.popperTarget);
                ro.observe(this.reference);
            }

            clicker(event, popperTarget, reference) {
                if (
                    SIDEBAR_EL.classList.contains("collapsed") &&
                    !popperTarget.contains(event.target) &&
                    !reference.contains(event.target)
                ) {
                    this.hide();
                }
            }

            hide() {
                this.instance.state.elements.popper.style.visibility = "hidden";
            }
        }

        class Poppers {
            subMenuPoppers = [];

            constructor() {
                this.init();
            }

            init() {
                SUB_MENU_ELS.forEach((element) => {
                    this.subMenuPoppers.push(
                        new PopperObject(element, element.lastElementChild)
                    );
                    this.closePoppers();
                });
            }

            togglePopper(target) {
                if (window.getComputedStyle(target).visibility === "hidden")
                    target.style.visibility = "visible";
                else target.style.visibility = "hidden";
            }

            updatePoppers() {
                this.subMenuPoppers.forEach((element) => {
                    element.instance.state.elements.popper.style.display = "none";
                    element.instance.update();
                });
            }

            closePoppers() {
                this.subMenuPoppers.forEach((element) => {
                    element.hide();
                });
            }
        }

        const slideUp = (target, duration = ANIMATION_DURATION) => {
            const {
                parentElement
            } = target;
            parentElement.classList.remove("open");
            target.style.transitionProperty = "height, margin, padding";
            target.style.transitionDuration = `${duration}ms`;
            target.style.boxSizing = "border-box";
            target.style.height = `${target.offsetHeight}px`;
            target.offsetHeight;
            target.style.overflow = "hidden";
            target.style.height = 0;
            target.style.paddingTop = 0;
            target.style.paddingBottom = 0;
            target.style.marginTop = 0;
            target.style.marginBottom = 0;
            window.setTimeout(() => {
                target.style.display = "none";
                target.style.removeProperty("height");
                target.style.removeProperty("padding-top");
                target.style.removeProperty("padding-bottom");
                target.style.removeProperty("margin-top");
                target.style.removeProperty("margin-bottom");
                target.style.removeProperty("overflow");
                target.style.removeProperty("transition-duration");
                target.style.removeProperty("transition-property");
            }, duration);
        };
        const slideDown = (target, duration = ANIMATION_DURATION) => {
            const {
                parentElement
            } = target;
            parentElement.classList.add("open");
            target.style.removeProperty("display");
            let {
                display
            } = window.getComputedStyle(target);
            if (display === "none") display = "block";
            target.style.display = display;
            const height = target.offsetHeight;
            target.style.overflow = "hidden";
            target.style.height = 0;
            target.style.paddingTop = 0;
            target.style.paddingBottom = 0;
            target.style.marginTop = 0;
            target.style.marginBottom = 0;
            target.offsetHeight;
            target.style.boxSizing = "border-box";
            target.style.transitionProperty = "height, margin, padding";
            target.style.transitionDuration = `${duration}ms`;
            target.style.height = `${height}px`;
            target.style.removeProperty("padding-top");
            target.style.removeProperty("padding-bottom");
            target.style.removeProperty("margin-top");
            target.style.removeProperty("margin-bottom");
            window.setTimeout(() => {
                target.style.removeProperty("height");
                target.style.removeProperty("overflow");
                target.style.removeProperty("transition-duration");
                target.style.removeProperty("transition-property");
            }, duration);
        };

        const slideToggle = (target, duration = ANIMATION_DURATION) => {
            if (window.getComputedStyle(target).display === "none")
                return slideDown(target, duration);
            return slideUp(target, duration);
        };

        const PoppersInstance = new Poppers();

        /**
         * wait for the current animation to finish and update poppers position
         */
        const updatePoppersTimeout = () => {
            setTimeout(() => {
                PoppersInstance.updatePoppers();
            }, ANIMATION_DURATION);
        };

        /**
         * sidebar collapse handler
         */
        document.getElementById("btn-collapse").addEventListener("click", () => {
            SIDEBAR_EL.classList.toggle("collapsed");
            PoppersInstance.closePoppers();
            if (SIDEBAR_EL.classList.contains("collapsed"))
                FIRST_SUB_MENUS_BTN.forEach((element) => {
                    element.parentElement.classList.remove("open");
                });

            updatePoppersTimeout();
        });

        /**
         * sidebar toggle handler (on break point )
         */
        document.getElementById("btn-toggle").addEventListener("click", () => {
            SIDEBAR_EL.classList.toggle("toggled");

            updatePoppersTimeout();
        });

        /**
         * toggle sidebar on overlay click
         */
        document.getElementById("overlay").addEventListener("click", () => {
            SIDEBAR_EL.classList.toggle("toggled");
        });

        const defaultOpenMenus = document.querySelectorAll(".menu-item.sub-menu.open");

        defaultOpenMenus.forEach((element) => {
            element.lastElementChild.style.display = "block";
        });

        /**
         * handle top level submenu click
         */
        FIRST_SUB_MENUS_BTN.forEach((element) => {
            element.addEventListener("click", () => {
                if (SIDEBAR_EL.classList.contains("collapsed"))
                    PoppersInstance.togglePopper(element.nextElementSibling);
                else {
                    const parentMenu = element.closest(".menu.open-current-submenu");
                    if (parentMenu)
                        parentMenu
                            .querySelectorAll(":scope > ul > .menu-item.sub-menu > a")
                            .forEach(
                                (el) =>
                                    window.getComputedStyle(el.nextElementSibling).display !==
                                    "none" && slideUp(el.nextElementSibling)
                            );
                    slideToggle(element.nextElementSibling);
                }
            });
        });

        /**
         * handle inner submenu click
         */
        INNER_SUB_MENUS_BTN.forEach((element) => {
            element.addEventListener("click", () => {
                slideToggle(element.nextElementSibling);
            });
        });
    </script>


    <script src="~/Areas/Admin/ckeditor/ckeditor.js"></script>
</body>
</html>